input:
3SQ
output:
Nssq : (3SQ) ＞ [6,1,1] ＞ 7[6,1]
rand:6/6,1/6,1/6
============================
input:
3SQ+1
output:
Nssq : (3SQ+1) ＞ [6,1,1]+1 ＞ 8[6,1]
rand:6/6,1/6,1/6
============================
input:
3SQ+1-2
output:
Nssq : (3SQ+1-2) ＞ [6,1,1]+1-2 ＞ 6[6,1]
rand:6/6,1/6,1/6
============================
input:
3SQ ファンブルチェック
output:
Nssq : (3SQ) ＞ [1,1,1] ＞ 2[1,1] ファンブル！
rand:1/6,1/6,1/6
============================
input:
3SQ クリティカルチェック
output:
Nssq : (3SQ) ＞ [6,6,1] ＞ 12[6,6] クリティカル！
rand:6/6,6/6,1/6
============================
input:
4DR3
output:
Nssq : (4DR3) ＞ [5,4,3,2]3 ＞ 2ダメージ 
rand:5/6,4/6,3/6,2/6
============================
input:
4DR5 耐性を変化させたときのダメージ変化を確認
output:
Nssq : (4DR5) ＞ [5,4,3,2]5 ＞ 0ダメージ 
rand:5/6,4/6,3/6,2/6
============================
input:
4DR3 ダメージロールのクリティカル処理確認（クリティカルロールにクリティカルが発生しないことも確認）
output:
Nssq : (4DR3) ＞ [6,6,3,2]3 ＞ 2ダメージ クリティカル！
(4DR3) ＞ [6,6,3,2]3 ＞ 2ダメージ 
rand:6/6,6/6,3/6,2/6,6/6,6/6,3/6,2/6
============================
input:
4DR3 6の数が1の数より1つ多い状態ではクリティカルが発生しないことを確認
output:
Nssq : (4DR3) ＞ [6,6,1,2]3 ＞ 2ダメージ 
rand:6/6,6/6,1/6,2/6
============================
input:
4DR+4 クリティカル時ダイスが8個になるか確認
output:
Nssq : (4DR+4) ＞ [6,6,3,2]4 ＞ 2ダメージ クリティカル！
(8DR4) ＞ [6,6,3,2,1,1,1,1]4 ＞ 2ダメージ 
rand:6/6,6/6,3/6,2/6,6/6,6/6,3/6,2/6,1/6,1/6,1/6,1/6
============================
input:
4DRC3 クリティカルアップ状態（6の数が1の数より1つでも多ければクリティカル）の確認
output:
Nssq : (4DRC3) ＞ [6,6,1,2]3 ＞ 2ダメージ クリティカル！
(4DR3) ＞ [6,6,3,2]3 ＞ 2ダメージ 
rand:6/6,6/6,1/6,2/6,6/6,6/6,3/6,2/6
============================
input:
4DRC+4 クリティカルアップ状態とクリティカル時のダイス数増加の両方の動作確認
output:
Nssq : (4DRC+4) ＞ [6,6,1,2]4 ＞ 2ダメージ クリティカル！
(8DR4) ＞ [6,6,3,2,1,1,1,1]4 ＞ 2ダメージ 
rand:6/6,6/6,1/6,2/6,6/6,6/6,3/6,2/6,1/6,1/6,1/6,1/6
============================
input:
4HR 回復ロールの確認&クリティカルが発生しないことを確認
output:
Nssq : (4HR) ＞ [6,6,3,2]3 ＞ 2回復
rand:6/6,6/6,3/6,2/6
============================
input:
4HR2 回復ロールの耐性確認
output:
Nssq : (4HR2) ＞ [6,6,3,2]2 ＞ 3回復
rand:6/6,6/6,3/6,2/6
============================
input:
TC
output:
Nssq : (TC) ＞ 5[1,4]: 成功
rand:1/6,4/6
============================
input:
TC+1 採集ロール確認&追加分では！ああっと！が発生しないことを確認
output:
Nssq : (TC+1) ＞ 5[1,4]: 成功
(TC+1) ＞ 3[1,2]: 成功（追加分）
rand:1/6,4/6,1/6,2/6
============================
input:
SC+1 ！ああっと！が発声することを確認
output:
Nssq : (SC+1) ＞ 5[1,4]: 成功
(SC+1) ＞ 4[2,2]: ！ああっと！
(SC+1) ＞ 3[1,2]: 成功（追加分）
rand:1/6,4/6,2/6,2/6,1/6,2/6
============================
input:
GC-1 負符号の際の挙動を確認
output:
Nssq : (GC-1) ＞ 6[2,4]: 成功
(GC-1) ＞ 5[3,2]: ！ああっと！
rand:2/6,4/6,3/6,2/6
============================